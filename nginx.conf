# =============================================================================
# CraftAI - Production Nginx Configuration
# Optimized for Vite + React SPA with SEO and Security
# =============================================================================

server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # Charset
    charset utf-8;

    # -----------------------------------------------------------------------------
    # Security Headers
    # -----------------------------------------------------------------------------
    # Prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Prevent MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Enable XSS protection
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy (adjust based on your needs)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.bolna.ai https://api.emailjs.com https://*.emailjs.com https://www.google-analytics.com; frame-ancestors 'self';" always;

    # Permissions Policy
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # -----------------------------------------------------------------------------
    # Gzip Compression
    # -----------------------------------------------------------------------------
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # -----------------------------------------------------------------------------
    # Static Assets Caching
    # -----------------------------------------------------------------------------
    # Cache static assets for 1 year
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Don't cache config.js (runtime configuration)
    location = /config.js {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
    }

    # Cache HTML files for 1 hour (can be revalidated)
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # -----------------------------------------------------------------------------
    # SEO Files
    # -----------------------------------------------------------------------------
    # robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # sitemap.xml
    location = /sitemap.xml {
        log_not_found off;
        access_log off;
    }

    # favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # -----------------------------------------------------------------------------
    # SPA Routing - Send all requests to index.html
    # -----------------------------------------------------------------------------
    location / {
        try_files $uri $uri/ /index.html;
    }

    # -----------------------------------------------------------------------------
    # API Proxy (if needed for avoiding CORS)
    # -----------------------------------------------------------------------------
    # Uncomment if you want to proxy API requests through Nginx
    # location /api/ {
    #     proxy_pass https://api.bolna.ai/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # -----------------------------------------------------------------------------
    # Health Check Endpoint
    # -----------------------------------------------------------------------------
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # -----------------------------------------------------------------------------
    # Error Pages
    # -----------------------------------------------------------------------------
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # -----------------------------------------------------------------------------
    # Logging
    # -----------------------------------------------------------------------------
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # -----------------------------------------------------------------------------
    # Performance Optimizations
    # -----------------------------------------------------------------------------
    # Disable access log for static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        access_log off;
    }

    # Enable sendfile
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Keepalive settings
    keepalive_timeout 65;
    keepalive_requests 100;

    # Client body size limit (10MB)
    client_max_body_size 10M;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
}

# =============================================================================
# Notes:
# - This configuration is optimized for production SPA deployment
# - All routes are sent to index.html for client-side routing
# - Security headers protect against common vulnerabilities
# - Gzip compression reduces bandwidth usage
# - Static assets are cached for better performance
# - SEO files (robots.txt, sitemap.xml) are properly served
# =============================================================================
